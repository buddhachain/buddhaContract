// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: the_dead.proto

#ifndef PROTOBUF_INCLUDED_the_5fdead_2eproto
#define PROTOBUF_INCLUDED_the_5fdead_2eproto

#include <limits>
#include <string>

#include <google/protobuf/port_def.inc>
#if PROTOBUF_VERSION < 3007000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers. Please update
#error your headers.
#endif
#if 3007001 < PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers. Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/port_undef.inc>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/inlined_string_field.h>
#include <google/protobuf/metadata_lite.h>
#include <google/protobuf/message_lite.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>
#define PROTOBUF_INTERNAL_EXPORT_the_5fdead_2eproto

// Internal implementation detail -- do not use these members.
struct TableStruct_the_5fdead_2eproto {
  static const ::google::protobuf::internal::ParseTableField entries[]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::google::protobuf::internal::AuxillaryParseTableField aux[]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::google::protobuf::internal::ParseTable schema[1]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::google::protobuf::internal::FieldMetadata field_metadata[];
  static const ::google::protobuf::internal::SerializationTable serialization_table[];
  static const ::google::protobuf::uint32 offsets[];
};
namespace identity {
class TheDead;
class TheDeadDefaultTypeInternal;
extern TheDeadDefaultTypeInternal _TheDead_default_instance_;
}  // namespace identity
namespace google {
namespace protobuf {
template<> ::identity::TheDead* Arena::CreateMaybeMessage<::identity::TheDead>(Arena*);
}  // namespace protobuf
}  // namespace google
namespace identity {

// ===================================================================

class TheDead :
    public ::google::protobuf::MessageLite /* @@protoc_insertion_point(class_definition:identity.TheDead) */ {
 public:
  TheDead();
  virtual ~TheDead();

  TheDead(const TheDead& from);

  inline TheDead& operator=(const TheDead& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  TheDead(TheDead&& from) noexcept
    : TheDead() {
    *this = ::std::move(from);
  }

  inline TheDead& operator=(TheDead&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const TheDead& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const TheDead* internal_default_instance() {
    return reinterpret_cast<const TheDead*>(
               &_TheDead_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    0;

  void Swap(TheDead* other);
  friend void swap(TheDead& a, TheDead& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline TheDead* New() const final {
    return CreateMaybeMessage<TheDead>(nullptr);
  }

  TheDead* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<TheDead>(arena);
  }
  void CheckTypeAndMergeFrom(const ::google::protobuf::MessageLite& from)
    final;
  void CopyFrom(const TheDead& from);
  void MergeFrom(const TheDead& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  void DiscardUnknownFields();
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(TheDead* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::std::string GetTypeName() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string id = 1;
  void clear_id();
  static const int kIdFieldNumber = 1;
  const ::std::string& id() const;
  void set_id(const ::std::string& value);
  #if LANG_CXX11
  void set_id(::std::string&& value);
  #endif
  void set_id(const char* value);
  void set_id(const char* value, size_t size);
  ::std::string* mutable_id();
  ::std::string* release_id();
  void set_allocated_id(::std::string* id);

  // string name = 2;
  void clear_name();
  static const int kNameFieldNumber = 2;
  const ::std::string& name() const;
  void set_name(const ::std::string& value);
  #if LANG_CXX11
  void set_name(::std::string&& value);
  #endif
  void set_name(const char* value);
  void set_name(const char* value, size_t size);
  ::std::string* mutable_name();
  ::std::string* release_name();
  void set_allocated_name(::std::string* name);

  // string born_timestamp = 4;
  void clear_born_timestamp();
  static const int kBornTimestampFieldNumber = 4;
  const ::std::string& born_timestamp() const;
  void set_born_timestamp(const ::std::string& value);
  #if LANG_CXX11
  void set_born_timestamp(::std::string&& value);
  #endif
  void set_born_timestamp(const char* value);
  void set_born_timestamp(const char* value, size_t size);
  ::std::string* mutable_born_timestamp();
  ::std::string* release_born_timestamp();
  void set_allocated_born_timestamp(::std::string* born_timestamp);

  // string born_address = 5;
  void clear_born_address();
  static const int kBornAddressFieldNumber = 5;
  const ::std::string& born_address() const;
  void set_born_address(const ::std::string& value);
  #if LANG_CXX11
  void set_born_address(::std::string&& value);
  #endif
  void set_born_address(const char* value);
  void set_born_address(const char* value, size_t size);
  ::std::string* mutable_born_address();
  ::std::string* release_born_address();
  void set_allocated_born_address(::std::string* born_address);

  // string dead_timestamp = 6;
  void clear_dead_timestamp();
  static const int kDeadTimestampFieldNumber = 6;
  const ::std::string& dead_timestamp() const;
  void set_dead_timestamp(const ::std::string& value);
  #if LANG_CXX11
  void set_dead_timestamp(::std::string&& value);
  #endif
  void set_dead_timestamp(const char* value);
  void set_dead_timestamp(const char* value, size_t size);
  ::std::string* mutable_dead_timestamp();
  ::std::string* release_dead_timestamp();
  void set_allocated_dead_timestamp(::std::string* dead_timestamp);

  // string dead_address = 7;
  void clear_dead_address();
  static const int kDeadAddressFieldNumber = 7;
  const ::std::string& dead_address() const;
  void set_dead_address(const ::std::string& value);
  #if LANG_CXX11
  void set_dead_address(::std::string&& value);
  #endif
  void set_dead_address(const char* value);
  void set_dead_address(const char* value, size_t size);
  ::std::string* mutable_dead_address();
  ::std::string* release_dead_address();
  void set_allocated_dead_address(::std::string* dead_address);

  // string idcard = 8;
  void clear_idcard();
  static const int kIdcardFieldNumber = 8;
  const ::std::string& idcard() const;
  void set_idcard(const ::std::string& value);
  #if LANG_CXX11
  void set_idcard(::std::string&& value);
  #endif
  void set_idcard(const char* value);
  void set_idcard(const char* value, size_t size);
  ::std::string* mutable_idcard();
  ::std::string* release_idcard();
  void set_allocated_idcard(::std::string* idcard);

  // string otherid = 9;
  void clear_otherid();
  static const int kOtheridFieldNumber = 9;
  const ::std::string& otherid() const;
  void set_otherid(const ::std::string& value);
  #if LANG_CXX11
  void set_otherid(::std::string&& value);
  #endif
  void set_otherid(const char* value);
  void set_otherid(const char* value, size_t size);
  ::std::string* mutable_otherid();
  ::std::string* release_otherid();
  void set_allocated_otherid(::std::string* otherid);

  // string desc = 10;
  void clear_desc();
  static const int kDescFieldNumber = 10;
  const ::std::string& desc() const;
  void set_desc(const ::std::string& value);
  #if LANG_CXX11
  void set_desc(::std::string&& value);
  #endif
  void set_desc(const char* value);
  void set_desc(const char* value, size_t size);
  ::std::string* mutable_desc();
  ::std::string* release_desc();
  void set_allocated_desc(::std::string* desc);

  // int64 sex = 3;
  void clear_sex();
  static const int kSexFieldNumber = 3;
  ::google::protobuf::int64 sex() const;
  void set_sex(::google::protobuf::int64 value);

  // @@protoc_insertion_point(class_scope:identity.TheDead)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArenaLite _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr id_;
  ::google::protobuf::internal::ArenaStringPtr name_;
  ::google::protobuf::internal::ArenaStringPtr born_timestamp_;
  ::google::protobuf::internal::ArenaStringPtr born_address_;
  ::google::protobuf::internal::ArenaStringPtr dead_timestamp_;
  ::google::protobuf::internal::ArenaStringPtr dead_address_;
  ::google::protobuf::internal::ArenaStringPtr idcard_;
  ::google::protobuf::internal::ArenaStringPtr otherid_;
  ::google::protobuf::internal::ArenaStringPtr desc_;
  ::google::protobuf::int64 sex_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_the_5fdead_2eproto;
};
// ===================================================================


// ===================================================================

#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// TheDead

// string id = 1;
inline void TheDead::clear_id() {
  id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& TheDead::id() const {
  // @@protoc_insertion_point(field_get:identity.TheDead.id)
  return id_.GetNoArena();
}
inline void TheDead::set_id(const ::std::string& value) {
  
  id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:identity.TheDead.id)
}
#if LANG_CXX11
inline void TheDead::set_id(::std::string&& value) {
  
  id_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:identity.TheDead.id)
}
#endif
inline void TheDead::set_id(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:identity.TheDead.id)
}
inline void TheDead::set_id(const char* value, size_t size) {
  
  id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:identity.TheDead.id)
}
inline ::std::string* TheDead::mutable_id() {
  
  // @@protoc_insertion_point(field_mutable:identity.TheDead.id)
  return id_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* TheDead::release_id() {
  // @@protoc_insertion_point(field_release:identity.TheDead.id)
  
  return id_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void TheDead::set_allocated_id(::std::string* id) {
  if (id != nullptr) {
    
  } else {
    
  }
  id_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), id);
  // @@protoc_insertion_point(field_set_allocated:identity.TheDead.id)
}

// string name = 2;
inline void TheDead::clear_name() {
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& TheDead::name() const {
  // @@protoc_insertion_point(field_get:identity.TheDead.name)
  return name_.GetNoArena();
}
inline void TheDead::set_name(const ::std::string& value) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:identity.TheDead.name)
}
#if LANG_CXX11
inline void TheDead::set_name(::std::string&& value) {
  
  name_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:identity.TheDead.name)
}
#endif
inline void TheDead::set_name(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:identity.TheDead.name)
}
inline void TheDead::set_name(const char* value, size_t size) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:identity.TheDead.name)
}
inline ::std::string* TheDead::mutable_name() {
  
  // @@protoc_insertion_point(field_mutable:identity.TheDead.name)
  return name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* TheDead::release_name() {
  // @@protoc_insertion_point(field_release:identity.TheDead.name)
  
  return name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void TheDead::set_allocated_name(::std::string* name) {
  if (name != nullptr) {
    
  } else {
    
  }
  name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), name);
  // @@protoc_insertion_point(field_set_allocated:identity.TheDead.name)
}

// int64 sex = 3;
inline void TheDead::clear_sex() {
  sex_ = PROTOBUF_LONGLONG(0);
}
inline ::google::protobuf::int64 TheDead::sex() const {
  // @@protoc_insertion_point(field_get:identity.TheDead.sex)
  return sex_;
}
inline void TheDead::set_sex(::google::protobuf::int64 value) {
  
  sex_ = value;
  // @@protoc_insertion_point(field_set:identity.TheDead.sex)
}

// string born_timestamp = 4;
inline void TheDead::clear_born_timestamp() {
  born_timestamp_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& TheDead::born_timestamp() const {
  // @@protoc_insertion_point(field_get:identity.TheDead.born_timestamp)
  return born_timestamp_.GetNoArena();
}
inline void TheDead::set_born_timestamp(const ::std::string& value) {
  
  born_timestamp_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:identity.TheDead.born_timestamp)
}
#if LANG_CXX11
inline void TheDead::set_born_timestamp(::std::string&& value) {
  
  born_timestamp_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:identity.TheDead.born_timestamp)
}
#endif
inline void TheDead::set_born_timestamp(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  born_timestamp_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:identity.TheDead.born_timestamp)
}
inline void TheDead::set_born_timestamp(const char* value, size_t size) {
  
  born_timestamp_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:identity.TheDead.born_timestamp)
}
inline ::std::string* TheDead::mutable_born_timestamp() {
  
  // @@protoc_insertion_point(field_mutable:identity.TheDead.born_timestamp)
  return born_timestamp_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* TheDead::release_born_timestamp() {
  // @@protoc_insertion_point(field_release:identity.TheDead.born_timestamp)
  
  return born_timestamp_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void TheDead::set_allocated_born_timestamp(::std::string* born_timestamp) {
  if (born_timestamp != nullptr) {
    
  } else {
    
  }
  born_timestamp_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), born_timestamp);
  // @@protoc_insertion_point(field_set_allocated:identity.TheDead.born_timestamp)
}

// string born_address = 5;
inline void TheDead::clear_born_address() {
  born_address_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& TheDead::born_address() const {
  // @@protoc_insertion_point(field_get:identity.TheDead.born_address)
  return born_address_.GetNoArena();
}
inline void TheDead::set_born_address(const ::std::string& value) {
  
  born_address_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:identity.TheDead.born_address)
}
#if LANG_CXX11
inline void TheDead::set_born_address(::std::string&& value) {
  
  born_address_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:identity.TheDead.born_address)
}
#endif
inline void TheDead::set_born_address(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  born_address_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:identity.TheDead.born_address)
}
inline void TheDead::set_born_address(const char* value, size_t size) {
  
  born_address_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:identity.TheDead.born_address)
}
inline ::std::string* TheDead::mutable_born_address() {
  
  // @@protoc_insertion_point(field_mutable:identity.TheDead.born_address)
  return born_address_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* TheDead::release_born_address() {
  // @@protoc_insertion_point(field_release:identity.TheDead.born_address)
  
  return born_address_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void TheDead::set_allocated_born_address(::std::string* born_address) {
  if (born_address != nullptr) {
    
  } else {
    
  }
  born_address_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), born_address);
  // @@protoc_insertion_point(field_set_allocated:identity.TheDead.born_address)
}

// string dead_timestamp = 6;
inline void TheDead::clear_dead_timestamp() {
  dead_timestamp_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& TheDead::dead_timestamp() const {
  // @@protoc_insertion_point(field_get:identity.TheDead.dead_timestamp)
  return dead_timestamp_.GetNoArena();
}
inline void TheDead::set_dead_timestamp(const ::std::string& value) {
  
  dead_timestamp_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:identity.TheDead.dead_timestamp)
}
#if LANG_CXX11
inline void TheDead::set_dead_timestamp(::std::string&& value) {
  
  dead_timestamp_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:identity.TheDead.dead_timestamp)
}
#endif
inline void TheDead::set_dead_timestamp(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  dead_timestamp_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:identity.TheDead.dead_timestamp)
}
inline void TheDead::set_dead_timestamp(const char* value, size_t size) {
  
  dead_timestamp_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:identity.TheDead.dead_timestamp)
}
inline ::std::string* TheDead::mutable_dead_timestamp() {
  
  // @@protoc_insertion_point(field_mutable:identity.TheDead.dead_timestamp)
  return dead_timestamp_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* TheDead::release_dead_timestamp() {
  // @@protoc_insertion_point(field_release:identity.TheDead.dead_timestamp)
  
  return dead_timestamp_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void TheDead::set_allocated_dead_timestamp(::std::string* dead_timestamp) {
  if (dead_timestamp != nullptr) {
    
  } else {
    
  }
  dead_timestamp_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), dead_timestamp);
  // @@protoc_insertion_point(field_set_allocated:identity.TheDead.dead_timestamp)
}

// string dead_address = 7;
inline void TheDead::clear_dead_address() {
  dead_address_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& TheDead::dead_address() const {
  // @@protoc_insertion_point(field_get:identity.TheDead.dead_address)
  return dead_address_.GetNoArena();
}
inline void TheDead::set_dead_address(const ::std::string& value) {
  
  dead_address_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:identity.TheDead.dead_address)
}
#if LANG_CXX11
inline void TheDead::set_dead_address(::std::string&& value) {
  
  dead_address_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:identity.TheDead.dead_address)
}
#endif
inline void TheDead::set_dead_address(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  dead_address_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:identity.TheDead.dead_address)
}
inline void TheDead::set_dead_address(const char* value, size_t size) {
  
  dead_address_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:identity.TheDead.dead_address)
}
inline ::std::string* TheDead::mutable_dead_address() {
  
  // @@protoc_insertion_point(field_mutable:identity.TheDead.dead_address)
  return dead_address_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* TheDead::release_dead_address() {
  // @@protoc_insertion_point(field_release:identity.TheDead.dead_address)
  
  return dead_address_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void TheDead::set_allocated_dead_address(::std::string* dead_address) {
  if (dead_address != nullptr) {
    
  } else {
    
  }
  dead_address_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), dead_address);
  // @@protoc_insertion_point(field_set_allocated:identity.TheDead.dead_address)
}

// string idcard = 8;
inline void TheDead::clear_idcard() {
  idcard_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& TheDead::idcard() const {
  // @@protoc_insertion_point(field_get:identity.TheDead.idcard)
  return idcard_.GetNoArena();
}
inline void TheDead::set_idcard(const ::std::string& value) {
  
  idcard_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:identity.TheDead.idcard)
}
#if LANG_CXX11
inline void TheDead::set_idcard(::std::string&& value) {
  
  idcard_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:identity.TheDead.idcard)
}
#endif
inline void TheDead::set_idcard(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  idcard_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:identity.TheDead.idcard)
}
inline void TheDead::set_idcard(const char* value, size_t size) {
  
  idcard_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:identity.TheDead.idcard)
}
inline ::std::string* TheDead::mutable_idcard() {
  
  // @@protoc_insertion_point(field_mutable:identity.TheDead.idcard)
  return idcard_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* TheDead::release_idcard() {
  // @@protoc_insertion_point(field_release:identity.TheDead.idcard)
  
  return idcard_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void TheDead::set_allocated_idcard(::std::string* idcard) {
  if (idcard != nullptr) {
    
  } else {
    
  }
  idcard_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), idcard);
  // @@protoc_insertion_point(field_set_allocated:identity.TheDead.idcard)
}

// string otherid = 9;
inline void TheDead::clear_otherid() {
  otherid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& TheDead::otherid() const {
  // @@protoc_insertion_point(field_get:identity.TheDead.otherid)
  return otherid_.GetNoArena();
}
inline void TheDead::set_otherid(const ::std::string& value) {
  
  otherid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:identity.TheDead.otherid)
}
#if LANG_CXX11
inline void TheDead::set_otherid(::std::string&& value) {
  
  otherid_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:identity.TheDead.otherid)
}
#endif
inline void TheDead::set_otherid(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  otherid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:identity.TheDead.otherid)
}
inline void TheDead::set_otherid(const char* value, size_t size) {
  
  otherid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:identity.TheDead.otherid)
}
inline ::std::string* TheDead::mutable_otherid() {
  
  // @@protoc_insertion_point(field_mutable:identity.TheDead.otherid)
  return otherid_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* TheDead::release_otherid() {
  // @@protoc_insertion_point(field_release:identity.TheDead.otherid)
  
  return otherid_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void TheDead::set_allocated_otherid(::std::string* otherid) {
  if (otherid != nullptr) {
    
  } else {
    
  }
  otherid_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), otherid);
  // @@protoc_insertion_point(field_set_allocated:identity.TheDead.otherid)
}

// string desc = 10;
inline void TheDead::clear_desc() {
  desc_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& TheDead::desc() const {
  // @@protoc_insertion_point(field_get:identity.TheDead.desc)
  return desc_.GetNoArena();
}
inline void TheDead::set_desc(const ::std::string& value) {
  
  desc_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:identity.TheDead.desc)
}
#if LANG_CXX11
inline void TheDead::set_desc(::std::string&& value) {
  
  desc_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:identity.TheDead.desc)
}
#endif
inline void TheDead::set_desc(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  desc_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:identity.TheDead.desc)
}
inline void TheDead::set_desc(const char* value, size_t size) {
  
  desc_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:identity.TheDead.desc)
}
inline ::std::string* TheDead::mutable_desc() {
  
  // @@protoc_insertion_point(field_mutable:identity.TheDead.desc)
  return desc_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* TheDead::release_desc() {
  // @@protoc_insertion_point(field_release:identity.TheDead.desc)
  
  return desc_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void TheDead::set_allocated_desc(::std::string* desc) {
  if (desc != nullptr) {
    
  } else {
    
  }
  desc_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), desc);
  // @@protoc_insertion_point(field_set_allocated:identity.TheDead.desc)
}

#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__

// @@protoc_insertion_point(namespace_scope)

}  // namespace identity

// @@protoc_insertion_point(global_scope)

#include <google/protobuf/port_undef.inc>
#endif  // PROTOBUF_INCLUDED_the_5fdead_2eproto
