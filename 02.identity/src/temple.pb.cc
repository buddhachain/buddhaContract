// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: temple.proto

#include "temple.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/io/zero_copy_stream_impl_lite.h>
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>

namespace identity {
class TempleDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Temple> _instance;
} _Temple_default_instance_;
class TempleMasterDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<TempleMaster> _instance;
} _TempleMaster_default_instance_;
}  // namespace identity
static void InitDefaultsTemple_temple_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::identity::_Temple_default_instance_;
    new (ptr) ::identity::Temple();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::identity::Temple::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_Temple_temple_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsTemple_temple_2eproto}, {}};

static void InitDefaultsTempleMaster_temple_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::identity::_TempleMaster_default_instance_;
    new (ptr) ::identity::TempleMaster();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::identity::TempleMaster::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_TempleMaster_temple_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsTempleMaster_temple_2eproto}, {}};

namespace identity {

// ===================================================================

void Temple::InitAsDefaultInstance() {
}
class Temple::HasBitSetters {
 public:
};

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Temple::kIdFieldNumber;
const int Temple::kPhotoFieldNumber;
const int Temple::kBuddhistNameFieldNumber;
const int Temple::kUnitFieldNumber;
const int Temple::kCreditcodeFieldNumber;
const int Temple::kAddressFieldNumber;
const int Temple::kSectFieldNumber;
const int Temple::kProofFieldNumber;
const int Temple::kApprovedFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Temple::Temple()
  : ::google::protobuf::MessageLite(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:identity.Temple)
}
Temple::Temple(const Temple& from)
  : ::google::protobuf::MessageLite(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.id().size() > 0) {
    id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.id_);
  }
  photo_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.photo().size() > 0) {
    photo_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.photo_);
  }
  buddhist_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.buddhist_name().size() > 0) {
    buddhist_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.buddhist_name_);
  }
  unit_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.unit().size() > 0) {
    unit_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.unit_);
  }
  creditcode_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.creditcode().size() > 0) {
    creditcode_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.creditcode_);
  }
  address_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.address().size() > 0) {
    address_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.address_);
  }
  sect_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.sect().size() > 0) {
    sect_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.sect_);
  }
  proof_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.proof().size() > 0) {
    proof_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.proof_);
  }
  approved_ = from.approved_;
  // @@protoc_insertion_point(copy_constructor:identity.Temple)
}

void Temple::SharedCtor() {
  ::google::protobuf::internal::InitSCC(
      &scc_info_Temple_temple_2eproto.base);
  id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  photo_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  buddhist_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  unit_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  creditcode_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  address_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  sect_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  proof_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  approved_ = false;
}

Temple::~Temple() {
  // @@protoc_insertion_point(destructor:identity.Temple)
  SharedDtor();
}

void Temple::SharedDtor() {
  id_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  photo_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  buddhist_name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  unit_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  creditcode_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  address_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  sect_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  proof_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void Temple::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const Temple& Temple::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_Temple_temple_2eproto.base);
  return *internal_default_instance();
}


void Temple::Clear() {
// @@protoc_insertion_point(message_clear_start:identity.Temple)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  photo_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  buddhist_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  unit_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  creditcode_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  address_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  sect_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  proof_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  approved_ = false;
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* Temple::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<Temple*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // string id = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 10) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName(nullptr);
        object = msg->mutable_id();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      // string photo = 2;
      case 2: {
        if (static_cast<::google::protobuf::uint8>(tag) != 18) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName(nullptr);
        object = msg->mutable_photo();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      // string buddhist_name = 3;
      case 3: {
        if (static_cast<::google::protobuf::uint8>(tag) != 26) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName(nullptr);
        object = msg->mutable_buddhist_name();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      // string unit = 4;
      case 4: {
        if (static_cast<::google::protobuf::uint8>(tag) != 34) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName(nullptr);
        object = msg->mutable_unit();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      // string creditcode = 5;
      case 5: {
        if (static_cast<::google::protobuf::uint8>(tag) != 42) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName(nullptr);
        object = msg->mutable_creditcode();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      // string address = 6;
      case 6: {
        if (static_cast<::google::protobuf::uint8>(tag) != 50) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName(nullptr);
        object = msg->mutable_address();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      // string sect = 7;
      case 7: {
        if (static_cast<::google::protobuf::uint8>(tag) != 58) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName(nullptr);
        object = msg->mutable_sect();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      // string proof = 8;
      case 8: {
        if (static_cast<::google::protobuf::uint8>(tag) != 66) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName(nullptr);
        object = msg->mutable_proof();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      // bool approved = 9;
      case 9: {
        if (static_cast<::google::protobuf::uint8>(tag) != 72) goto handle_unusual;
        msg->set_approved(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
string_till_end:
  static_cast<::std::string*>(object)->clear();
  static_cast<::std::string*>(object)->reserve(size);
  goto len_delim_till_end;
len_delim_till_end:
  return ctx->StoreAndTailCall(ptr, end, {_InternalParse, msg},
                               {parser_till_end, object}, size);
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool Temple::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::LiteUnknownFieldSetter unknown_fields_setter(
      &_internal_metadata_);
  ::google::protobuf::io::StringOutputStream unknown_fields_output(
      unknown_fields_setter.buffer());
  ::google::protobuf::io::CodedOutputStream unknown_fields_stream(
      &unknown_fields_output, false);
  // @@protoc_insertion_point(parse_start:identity.Temple)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (10 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_id()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->id().data(), static_cast<int>(this->id().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "identity.Temple.id"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string photo = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (18 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_photo()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->photo().data(), static_cast<int>(this->photo().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "identity.Temple.photo"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string buddhist_name = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (26 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_buddhist_name()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->buddhist_name().data(), static_cast<int>(this->buddhist_name().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "identity.Temple.buddhist_name"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string unit = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (34 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_unit()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->unit().data(), static_cast<int>(this->unit().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "identity.Temple.unit"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string creditcode = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (42 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_creditcode()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->creditcode().data(), static_cast<int>(this->creditcode().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "identity.Temple.creditcode"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string address = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (50 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_address()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->address().data(), static_cast<int>(this->address().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "identity.Temple.address"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string sect = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (58 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_sect()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->sect().data(), static_cast<int>(this->sect().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "identity.Temple.sect"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string proof = 8;
      case 8: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (66 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_proof()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->proof().data(), static_cast<int>(this->proof().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "identity.Temple.proof"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bool approved = 9;
      case 9: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (72 & 0xFF)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &approved_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(
            input, tag, &unknown_fields_stream));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:identity.Temple)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:identity.Temple)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void Temple::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:identity.Temple)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string id = 1;
  if (this->id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->id().data(), static_cast<int>(this->id().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "identity.Temple.id");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->id(), output);
  }

  // string photo = 2;
  if (this->photo().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->photo().data(), static_cast<int>(this->photo().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "identity.Temple.photo");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->photo(), output);
  }

  // string buddhist_name = 3;
  if (this->buddhist_name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->buddhist_name().data(), static_cast<int>(this->buddhist_name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "identity.Temple.buddhist_name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->buddhist_name(), output);
  }

  // string unit = 4;
  if (this->unit().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->unit().data(), static_cast<int>(this->unit().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "identity.Temple.unit");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      4, this->unit(), output);
  }

  // string creditcode = 5;
  if (this->creditcode().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->creditcode().data(), static_cast<int>(this->creditcode().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "identity.Temple.creditcode");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      5, this->creditcode(), output);
  }

  // string address = 6;
  if (this->address().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->address().data(), static_cast<int>(this->address().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "identity.Temple.address");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      6, this->address(), output);
  }

  // string sect = 7;
  if (this->sect().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->sect().data(), static_cast<int>(this->sect().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "identity.Temple.sect");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      7, this->sect(), output);
  }

  // string proof = 8;
  if (this->proof().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->proof().data(), static_cast<int>(this->proof().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "identity.Temple.proof");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      8, this->proof(), output);
  }

  // bool approved = 9;
  if (this->approved() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(9, this->approved(), output);
  }

  output->WriteRaw(_internal_metadata_.unknown_fields().data(),
                   static_cast<int>(_internal_metadata_.unknown_fields().size()));
  // @@protoc_insertion_point(serialize_end:identity.Temple)
}

size_t Temple::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:identity.Temple)
  size_t total_size = 0;

  total_size += _internal_metadata_.unknown_fields().size();

  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string id = 1;
  if (this->id().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->id());
  }

  // string photo = 2;
  if (this->photo().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->photo());
  }

  // string buddhist_name = 3;
  if (this->buddhist_name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->buddhist_name());
  }

  // string unit = 4;
  if (this->unit().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->unit());
  }

  // string creditcode = 5;
  if (this->creditcode().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->creditcode());
  }

  // string address = 6;
  if (this->address().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->address());
  }

  // string sect = 7;
  if (this->sect().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->sect());
  }

  // string proof = 8;
  if (this->proof().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->proof());
  }

  // bool approved = 9;
  if (this->approved() != 0) {
    total_size += 1 + 1;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Temple::CheckTypeAndMergeFrom(
    const ::google::protobuf::MessageLite& from) {
  MergeFrom(*::google::protobuf::down_cast<const Temple*>(&from));
}

void Temple::MergeFrom(const Temple& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:identity.Temple)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.id().size() > 0) {

    id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.id_);
  }
  if (from.photo().size() > 0) {

    photo_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.photo_);
  }
  if (from.buddhist_name().size() > 0) {

    buddhist_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.buddhist_name_);
  }
  if (from.unit().size() > 0) {

    unit_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.unit_);
  }
  if (from.creditcode().size() > 0) {

    creditcode_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.creditcode_);
  }
  if (from.address().size() > 0) {

    address_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.address_);
  }
  if (from.sect().size() > 0) {

    sect_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.sect_);
  }
  if (from.proof().size() > 0) {

    proof_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.proof_);
  }
  if (from.approved() != 0) {
    set_approved(from.approved());
  }
}

void Temple::CopyFrom(const Temple& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:identity.Temple)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Temple::IsInitialized() const {
  return true;
}

void Temple::Swap(Temple* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Temple::InternalSwap(Temple* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  id_.Swap(&other->id_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  photo_.Swap(&other->photo_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  buddhist_name_.Swap(&other->buddhist_name_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  unit_.Swap(&other->unit_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  creditcode_.Swap(&other->creditcode_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  address_.Swap(&other->address_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  sect_.Swap(&other->sect_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  proof_.Swap(&other->proof_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(approved_, other->approved_);
}

::std::string Temple::GetTypeName() const {
  return "identity.Temple";
}


// ===================================================================

void TempleMaster::InitAsDefaultInstance() {
}
class TempleMaster::HasBitSetters {
 public:
};

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int TempleMaster::kTempleidFieldNumber;
const int TempleMaster::kMasteridFieldNumber;
const int TempleMaster::kApprovedFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

TempleMaster::TempleMaster()
  : ::google::protobuf::MessageLite(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:identity.TempleMaster)
}
TempleMaster::TempleMaster(const TempleMaster& from)
  : ::google::protobuf::MessageLite(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  templeid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.templeid().size() > 0) {
    templeid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.templeid_);
  }
  masterid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.masterid().size() > 0) {
    masterid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.masterid_);
  }
  approved_ = from.approved_;
  // @@protoc_insertion_point(copy_constructor:identity.TempleMaster)
}

void TempleMaster::SharedCtor() {
  ::google::protobuf::internal::InitSCC(
      &scc_info_TempleMaster_temple_2eproto.base);
  templeid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  masterid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  approved_ = false;
}

TempleMaster::~TempleMaster() {
  // @@protoc_insertion_point(destructor:identity.TempleMaster)
  SharedDtor();
}

void TempleMaster::SharedDtor() {
  templeid_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  masterid_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void TempleMaster::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const TempleMaster& TempleMaster::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_TempleMaster_temple_2eproto.base);
  return *internal_default_instance();
}


void TempleMaster::Clear() {
// @@protoc_insertion_point(message_clear_start:identity.TempleMaster)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  templeid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  masterid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  approved_ = false;
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* TempleMaster::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<TempleMaster*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // string templeid = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 10) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName(nullptr);
        object = msg->mutable_templeid();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      // string masterid = 2;
      case 2: {
        if (static_cast<::google::protobuf::uint8>(tag) != 18) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName(nullptr);
        object = msg->mutable_masterid();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      // bool approved = 3;
      case 3: {
        if (static_cast<::google::protobuf::uint8>(tag) != 24) goto handle_unusual;
        msg->set_approved(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
string_till_end:
  static_cast<::std::string*>(object)->clear();
  static_cast<::std::string*>(object)->reserve(size);
  goto len_delim_till_end;
len_delim_till_end:
  return ctx->StoreAndTailCall(ptr, end, {_InternalParse, msg},
                               {parser_till_end, object}, size);
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool TempleMaster::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::LiteUnknownFieldSetter unknown_fields_setter(
      &_internal_metadata_);
  ::google::protobuf::io::StringOutputStream unknown_fields_output(
      unknown_fields_setter.buffer());
  ::google::protobuf::io::CodedOutputStream unknown_fields_stream(
      &unknown_fields_output, false);
  // @@protoc_insertion_point(parse_start:identity.TempleMaster)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string templeid = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (10 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_templeid()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->templeid().data(), static_cast<int>(this->templeid().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "identity.TempleMaster.templeid"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string masterid = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (18 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_masterid()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->masterid().data(), static_cast<int>(this->masterid().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "identity.TempleMaster.masterid"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bool approved = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (24 & 0xFF)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &approved_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(
            input, tag, &unknown_fields_stream));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:identity.TempleMaster)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:identity.TempleMaster)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void TempleMaster::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:identity.TempleMaster)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string templeid = 1;
  if (this->templeid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->templeid().data(), static_cast<int>(this->templeid().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "identity.TempleMaster.templeid");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->templeid(), output);
  }

  // string masterid = 2;
  if (this->masterid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->masterid().data(), static_cast<int>(this->masterid().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "identity.TempleMaster.masterid");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->masterid(), output);
  }

  // bool approved = 3;
  if (this->approved() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(3, this->approved(), output);
  }

  output->WriteRaw(_internal_metadata_.unknown_fields().data(),
                   static_cast<int>(_internal_metadata_.unknown_fields().size()));
  // @@protoc_insertion_point(serialize_end:identity.TempleMaster)
}

size_t TempleMaster::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:identity.TempleMaster)
  size_t total_size = 0;

  total_size += _internal_metadata_.unknown_fields().size();

  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string templeid = 1;
  if (this->templeid().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->templeid());
  }

  // string masterid = 2;
  if (this->masterid().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->masterid());
  }

  // bool approved = 3;
  if (this->approved() != 0) {
    total_size += 1 + 1;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void TempleMaster::CheckTypeAndMergeFrom(
    const ::google::protobuf::MessageLite& from) {
  MergeFrom(*::google::protobuf::down_cast<const TempleMaster*>(&from));
}

void TempleMaster::MergeFrom(const TempleMaster& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:identity.TempleMaster)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.templeid().size() > 0) {

    templeid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.templeid_);
  }
  if (from.masterid().size() > 0) {

    masterid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.masterid_);
  }
  if (from.approved() != 0) {
    set_approved(from.approved());
  }
}

void TempleMaster::CopyFrom(const TempleMaster& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:identity.TempleMaster)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TempleMaster::IsInitialized() const {
  return true;
}

void TempleMaster::Swap(TempleMaster* other) {
  if (other == this) return;
  InternalSwap(other);
}
void TempleMaster::InternalSwap(TempleMaster* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  templeid_.Swap(&other->templeid_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  masterid_.Swap(&other->masterid_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(approved_, other->approved_);
}

::std::string TempleMaster::GetTypeName() const {
  return "identity.TempleMaster";
}


// @@protoc_insertion_point(namespace_scope)
}  // namespace identity
namespace google {
namespace protobuf {
template<> PROTOBUF_NOINLINE ::identity::Temple* Arena::CreateMaybeMessage< ::identity::Temple >(Arena* arena) {
  return Arena::CreateInternal< ::identity::Temple >(arena);
}
template<> PROTOBUF_NOINLINE ::identity::TempleMaster* Arena::CreateMaybeMessage< ::identity::TempleMaster >(Arena* arena) {
  return Arena::CreateInternal< ::identity::TempleMaster >(arena);
}
}  // namespace protobuf
}  // namespace google

// @@protoc_insertion_point(global_scope)
#include <google/protobuf/port_undef.inc>
